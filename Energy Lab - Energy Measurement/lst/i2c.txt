; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\i2c.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\i2c.d --cpu=Cortex-M0 --apcs=interwork -O0 -I.\inc -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Freescale\Kinetis -D__MICROLIB --omf_browse=.\obj\i2c.crf src\i2c.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  i2c_init PROC
;;;4      //init i2c0
;;;5      void i2c_init(void)
000000  4893              LDR      r0,|L1.592|
;;;6      {
;;;7      	//clock i2c peripheral and port E
;;;8      	SIM->SCGC4 |= SIM_SCGC4_I2C0_MASK;
000002  6b40              LDR      r0,[r0,#0x34]
000004  2140              MOVS     r1,#0x40
000006  4308              ORRS     r0,r0,r1
000008  4991              LDR      r1,|L1.592|
00000a  6348              STR      r0,[r1,#0x34]
;;;9      	SIM->SCGC5 |= (SIM_SCGC5_PORTE_MASK);
00000c  4608              MOV      r0,r1
00000e  6b80              LDR      r0,[r0,#0x38]
000010  2101              MOVS     r1,#1
000012  0349              LSLS     r1,r1,#13
000014  4308              ORRS     r0,r0,r1
000016  498e              LDR      r1,|L1.592|
000018  6388              STR      r0,[r1,#0x38]
;;;10     	
;;;11     	//set pins to I2C function
;;;12     	PORTE->PCR[24] |= PORT_PCR_MUX(5);
00001a  488e              LDR      r0,|L1.596|
00001c  6a00              LDR      r0,[r0,#0x20]
00001e  2105              MOVS     r1,#5
000020  0209              LSLS     r1,r1,#8
000022  4308              ORRS     r0,r0,r1
000024  498b              LDR      r1,|L1.596|
000026  6208              STR      r0,[r1,#0x20]
;;;13     	PORTE->PCR[25] |= PORT_PCR_MUX(5);
000028  4608              MOV      r0,r1
00002a  6a40              LDR      r0,[r0,#0x24]
00002c  2105              MOVS     r1,#5
00002e  0209              LSLS     r1,r1,#8
000030  4308              ORRS     r0,r0,r1
000032  4988              LDR      r1,|L1.596|
000034  6248              STR      r0,[r1,#0x24]
;;;14     		
;;;15     	//set to 100k baud
;;;16     	//baud = bus freq/(scl_div+mul)
;;;17      	//~400k = 24M/(64); icr=0x12 sets scl_div to 64
;;;18      	I2C0->F = (I2C_F_ICR(0x12) | I2C_F_MULT(0));
000036  2012              MOVS     r0,#0x12
000038  4987              LDR      r1,|L1.600|
00003a  7048              STRB     r0,[r1,#1]
;;;19     	
;;;20     	//enable i2c and set to master mode
;;;21     	I2C0->C1 |= (I2C_C1_IICEN_MASK );
00003c  4608              MOV      r0,r1
00003e  7880              LDRB     r0,[r0,#2]
000040  2180              MOVS     r1,#0x80
000042  4308              ORRS     r0,r0,r1
000044  4984              LDR      r1,|L1.600|
000046  7088              STRB     r0,[r1,#2]
;;;22     }
000048  4770              BX       lr
;;;23     
                          ENDP

                  i2c_start PROC
;;;25     //send start sequence
;;;26     void i2c_start()
00004a  4883              LDR      r0,|L1.600|
;;;27     {
;;;28     	I2C_TRAN;							/*set to transmit mode */
00004c  7880              LDRB     r0,[r0,#2]
00004e  2110              MOVS     r1,#0x10
000050  4308              ORRS     r0,r0,r1
000052  4981              LDR      r1,|L1.600|
000054  7088              STRB     r0,[r1,#2]
;;;29     	I2C_M_START;					/*send start	*/
000056  4608              MOV      r0,r1
000058  7880              LDRB     r0,[r0,#2]
00005a  2120              MOVS     r1,#0x20
00005c  4308              ORRS     r0,r0,r1
00005e  497e              LDR      r1,|L1.600|
000060  7088              STRB     r0,[r1,#2]
;;;30     }
000062  4770              BX       lr
;;;31     
                          ENDP

                  i2c_read_setup PROC
;;;32     //send device and register addresses
;;;33     void i2c_read_setup(uint8_t dev, uint8_t address)
000064  4a7c              LDR      r2,|L1.600|
;;;34     {
;;;35     	I2C0->D = dev;			  /*send dev address	*/
000066  7110              STRB     r0,[r2,#4]
;;;36     	I2C_WAIT;							/*wait for completion */
000068  bf00              NOP      
                  |L1.106|
00006a  4a7b              LDR      r2,|L1.600|
00006c  78d2              LDRB     r2,[r2,#3]
00006e  2302              MOVS     r3,#2
000070  421a              TST      r2,r3
000072  d0fa              BEQ      |L1.106|
000074  4a78              LDR      r2,|L1.600|
000076  78d2              LDRB     r2,[r2,#3]
000078  431a              ORRS     r2,r2,r3
00007a  4b77              LDR      r3,|L1.600|
00007c  70da              STRB     r2,[r3,#3]
;;;37     	
;;;38     	I2C0->D =  address;		/*send read address	*/
00007e  461a              MOV      r2,r3
000080  7111              STRB     r1,[r2,#4]
;;;39     	I2C_WAIT;							/*wait for completion */
000082  bf00              NOP      
                  |L1.132|
000084  4a74              LDR      r2,|L1.600|
000086  78d2              LDRB     r2,[r2,#3]
000088  2302              MOVS     r3,#2
00008a  421a              TST      r2,r3
00008c  d0fa              BEQ      |L1.132|
00008e  4a72              LDR      r2,|L1.600|
000090  78d2              LDRB     r2,[r2,#3]
000092  431a              ORRS     r2,r2,r3
000094  4b70              LDR      r3,|L1.600|
000096  70da              STRB     r2,[r3,#3]
;;;40     		
;;;41     	I2C_M_RSTART;				   /*repeated start */
000098  461a              MOV      r2,r3
00009a  7892              LDRB     r2,[r2,#2]
00009c  2304              MOVS     r3,#4
00009e  431a              ORRS     r2,r2,r3
0000a0  4b6d              LDR      r3,|L1.600|
0000a2  709a              STRB     r2,[r3,#2]
;;;42     	I2C0->D = (dev|0x1);	 /*send dev address (read)	*/
0000a4  2201              MOVS     r2,#1
0000a6  4302              ORRS     r2,r2,r0
0000a8  711a              STRB     r2,[r3,#4]
;;;43     	I2C_WAIT;							 /*wait for completion */
0000aa  bf00              NOP      
                  |L1.172|
0000ac  4a6a              LDR      r2,|L1.600|
0000ae  78d2              LDRB     r2,[r2,#3]
0000b0  2302              MOVS     r3,#2
0000b2  421a              TST      r2,r3
0000b4  d0fa              BEQ      |L1.172|
0000b6  4a68              LDR      r2,|L1.600|
0000b8  78d2              LDRB     r2,[r2,#3]
0000ba  431a              ORRS     r2,r2,r3
0000bc  4b66              LDR      r3,|L1.600|
0000be  70da              STRB     r2,[r3,#3]
;;;44     	
;;;45     	I2C_REC;						   /*set to recieve mode */
0000c0  461a              MOV      r2,r3
0000c2  7892              LDRB     r2,[r2,#2]
0000c4  2310              MOVS     r3,#0x10
0000c6  439a              BICS     r2,r2,r3
0000c8  4b63              LDR      r3,|L1.600|
0000ca  709a              STRB     r2,[r3,#2]
;;;46     
;;;47     }
0000cc  4770              BX       lr
;;;48     
                          ENDP

                  i2c_repeated_read PROC
;;;49     //read a byte and ack/nack as appropriate
;;;50     uint8_t i2c_repeated_read(uint8_t isLastRead)
0000ce  4601              MOV      r1,r0
;;;51     {
;;;52     	uint8_t data;
;;;53     	
;;;54     	if(isLastRead)	{
0000d0  2900              CMP      r1,#0
0000d2  d006              BEQ      |L1.226|
;;;55     		NACK;								/*set NACK after read	*/
0000d4  4a60              LDR      r2,|L1.600|
0000d6  7892              LDRB     r2,[r2,#2]
0000d8  2308              MOVS     r3,#8
0000da  431a              ORRS     r2,r2,r3
0000dc  4b5e              LDR      r3,|L1.600|
0000de  709a              STRB     r2,[r3,#2]
0000e0  e005              B        |L1.238|
                  |L1.226|
;;;56     	} else	{
;;;57     		ACK;								/*ACK after read	*/
0000e2  4a5d              LDR      r2,|L1.600|
0000e4  7892              LDRB     r2,[r2,#2]
0000e6  2308              MOVS     r3,#8
0000e8  439a              BICS     r2,r2,r3
0000ea  4b5b              LDR      r3,|L1.600|
0000ec  709a              STRB     r2,[r3,#2]
                  |L1.238|
;;;58     	}
;;;59     	
;;;60     	data = I2C0->D;				/*dummy read	*/
0000ee  4a5a              LDR      r2,|L1.600|
0000f0  7910              LDRB     r0,[r2,#4]
;;;61     	I2C_WAIT;							/*wait for completion */
0000f2  bf00              NOP      
                  |L1.244|
0000f4  4a58              LDR      r2,|L1.600|
0000f6  78d2              LDRB     r2,[r2,#3]
0000f8  2302              MOVS     r3,#2
0000fa  421a              TST      r2,r3
0000fc  d0fa              BEQ      |L1.244|
0000fe  4a56              LDR      r2,|L1.600|
000100  78d2              LDRB     r2,[r2,#3]
000102  431a              ORRS     r2,r2,r3
000104  4b54              LDR      r3,|L1.600|
000106  70da              STRB     r2,[r3,#3]
;;;62     	
;;;63     	if(isLastRead)	{
000108  2900              CMP      r1,#0
00010a  d005              BEQ      |L1.280|
;;;64     		I2C_M_STOP;					/*send stop	*/
00010c  461a              MOV      r2,r3
00010e  7892              LDRB     r2,[r2,#2]
000110  2320              MOVS     r3,#0x20
000112  439a              BICS     r2,r2,r3
000114  4b50              LDR      r3,|L1.600|
000116  709a              STRB     r2,[r3,#2]
                  |L1.280|
;;;65     	}
;;;66     	data = I2C0->D;				/*read data	*/
000118  4a4f              LDR      r2,|L1.600|
00011a  7910              LDRB     r0,[r2,#4]
;;;67     
;;;68     	return  data;					
;;;69     }
00011c  4770              BX       lr
;;;70     
                          ENDP

                  i2c_read_byte PROC
;;;74     //using 7bit addressing reads a byte from dev:address
;;;75     uint8_t i2c_read_byte(uint8_t dev, uint8_t address)
00011e  b510              PUSH     {r4,lr}
;;;76     {
000120  4602              MOV      r2,r0
;;;77     	uint8_t data;
;;;78     	
;;;79     	I2C_TRAN;							/*set to transmit mode */
000122  4b4d              LDR      r3,|L1.600|
000124  789b              LDRB     r3,[r3,#2]
000126  2410              MOVS     r4,#0x10
000128  4323              ORRS     r3,r3,r4
00012a  4c4b              LDR      r4,|L1.600|
00012c  70a3              STRB     r3,[r4,#2]
;;;80     	I2C_M_START;					/*send start	*/
00012e  4623              MOV      r3,r4
000130  789b              LDRB     r3,[r3,#2]
000132  2420              MOVS     r4,#0x20
000134  4323              ORRS     r3,r3,r4
000136  4c48              LDR      r4,|L1.600|
000138  70a3              STRB     r3,[r4,#2]
;;;81     	I2C0->D = dev;			  /*send dev address	*/
00013a  4623              MOV      r3,r4
00013c  711a              STRB     r2,[r3,#4]
;;;82     	I2C_WAIT;							/*wait for completion */
00013e  bf00              NOP      
                  |L1.320|
000140  4b45              LDR      r3,|L1.600|
000142  78db              LDRB     r3,[r3,#3]
000144  2402              MOVS     r4,#2
000146  4223              TST      r3,r4
000148  d0fa              BEQ      |L1.320|
00014a  4b43              LDR      r3,|L1.600|
00014c  78db              LDRB     r3,[r3,#3]
00014e  4323              ORRS     r3,r3,r4
000150  4c41              LDR      r4,|L1.600|
000152  70e3              STRB     r3,[r4,#3]
;;;83     	
;;;84     	I2C0->D =  address;		/*send read address	*/
000154  4623              MOV      r3,r4
000156  7119              STRB     r1,[r3,#4]
;;;85     	I2C_WAIT;							/*wait for completion */
000158  bf00              NOP      
                  |L1.346|
00015a  4b3f              LDR      r3,|L1.600|
00015c  78db              LDRB     r3,[r3,#3]
00015e  2402              MOVS     r4,#2
000160  4223              TST      r3,r4
000162  d0fa              BEQ      |L1.346|
000164  4b3c              LDR      r3,|L1.600|
000166  78db              LDRB     r3,[r3,#3]
000168  4323              ORRS     r3,r3,r4
00016a  4c3b              LDR      r4,|L1.600|
00016c  70e3              STRB     r3,[r4,#3]
;;;86     		
;;;87     	I2C_M_RSTART;				   /*repeated start */
00016e  4623              MOV      r3,r4
000170  789b              LDRB     r3,[r3,#2]
000172  2404              MOVS     r4,#4
000174  4323              ORRS     r3,r3,r4
000176  4c38              LDR      r4,|L1.600|
000178  70a3              STRB     r3,[r4,#2]
;;;88     	I2C0->D = (dev|0x1);	 /*send dev address (read)	*/
00017a  2301              MOVS     r3,#1
00017c  4313              ORRS     r3,r3,r2
00017e  7123              STRB     r3,[r4,#4]
;;;89     	I2C_WAIT;							 /*wait for completion */
000180  bf00              NOP      
                  |L1.386|
000182  4b35              LDR      r3,|L1.600|
000184  78db              LDRB     r3,[r3,#3]
000186  2402              MOVS     r4,#2
000188  4223              TST      r3,r4
00018a  d0fa              BEQ      |L1.386|
00018c  4b32              LDR      r3,|L1.600|
00018e  78db              LDRB     r3,[r3,#3]
000190  4323              ORRS     r3,r3,r4
000192  4c31              LDR      r4,|L1.600|
000194  70e3              STRB     r3,[r4,#3]
;;;90     	
;;;91     	I2C_REC;						   /*set to recieve mode */
000196  4623              MOV      r3,r4
000198  789b              LDRB     r3,[r3,#2]
00019a  2410              MOVS     r4,#0x10
00019c  43a3              BICS     r3,r3,r4
00019e  4c2e              LDR      r4,|L1.600|
0001a0  70a3              STRB     r3,[r4,#2]
;;;92     	NACK;									 /*set NACK after read	*/
0001a2  4623              MOV      r3,r4
0001a4  789b              LDRB     r3,[r3,#2]
0001a6  2408              MOVS     r4,#8
0001a8  4323              ORRS     r3,r3,r4
0001aa  4c2b              LDR      r4,|L1.600|
0001ac  70a3              STRB     r3,[r4,#2]
;;;93     	
;;;94     	data = I2C0->D;					/*dummy read	*/
0001ae  4623              MOV      r3,r4
0001b0  7918              LDRB     r0,[r3,#4]
;;;95     	I2C_WAIT;								/*wait for completion */
0001b2  bf00              NOP      
                  |L1.436|
0001b4  4b28              LDR      r3,|L1.600|
0001b6  78db              LDRB     r3,[r3,#3]
0001b8  2402              MOVS     r4,#2
0001ba  4223              TST      r3,r4
0001bc  d0fa              BEQ      |L1.436|
0001be  4b26              LDR      r3,|L1.600|
0001c0  78db              LDRB     r3,[r3,#3]
0001c2  4323              ORRS     r3,r3,r4
0001c4  4c24              LDR      r4,|L1.600|
0001c6  70e3              STRB     r3,[r4,#3]
;;;96     	
;;;97     	I2C_M_STOP;							/*send stop	*/
0001c8  4623              MOV      r3,r4
0001ca  789b              LDRB     r3,[r3,#2]
0001cc  2420              MOVS     r4,#0x20
0001ce  43a3              BICS     r3,r3,r4
0001d0  4c21              LDR      r4,|L1.600|
0001d2  70a3              STRB     r3,[r4,#2]
;;;98     	data = I2C0->D;					/*read data	*/
0001d4  4623              MOV      r3,r4
0001d6  7918              LDRB     r0,[r3,#4]
;;;99     
;;;100    	return data;
;;;101    }
0001d8  bd10              POP      {r4,pc}
;;;102    
                          ENDP

                  i2c_write_byte PROC
;;;105    //using 7bit addressing writes a byte data to dev:address
;;;106    void i2c_write_byte(uint8_t dev, uint8_t address, uint8_t data)
0001da  b510              PUSH     {r4,lr}
;;;107    {
;;;108    	
;;;109    	I2C_TRAN;							/*set to transmit mode */
0001dc  4b1e              LDR      r3,|L1.600|
0001de  789b              LDRB     r3,[r3,#2]
0001e0  2410              MOVS     r4,#0x10
0001e2  4323              ORRS     r3,r3,r4
0001e4  4c1c              LDR      r4,|L1.600|
0001e6  70a3              STRB     r3,[r4,#2]
;;;110    	I2C_M_START;					/*send start	*/
0001e8  4623              MOV      r3,r4
0001ea  789b              LDRB     r3,[r3,#2]
0001ec  2420              MOVS     r4,#0x20
0001ee  4323              ORRS     r3,r3,r4
0001f0  4c19              LDR      r4,|L1.600|
0001f2  70a3              STRB     r3,[r4,#2]
;;;111    	I2C0->D = dev;			  /*send dev address	*/
0001f4  4623              MOV      r3,r4
0001f6  7118              STRB     r0,[r3,#4]
;;;112    	I2C_WAIT;						  /*wait for ack */
0001f8  bf00              NOP      
                  |L1.506|
0001fa  4b17              LDR      r3,|L1.600|
0001fc  78db              LDRB     r3,[r3,#3]
0001fe  2402              MOVS     r4,#2
000200  4223              TST      r3,r4
000202  d0fa              BEQ      |L1.506|
000204  4b14              LDR      r3,|L1.600|
000206  78db              LDRB     r3,[r3,#3]
000208  4323              ORRS     r3,r3,r4
00020a  4c13              LDR      r4,|L1.600|
00020c  70e3              STRB     r3,[r4,#3]
;;;113    	
;;;114    	I2C0->D =  address;		/*send write address	*/
00020e  4623              MOV      r3,r4
000210  7119              STRB     r1,[r3,#4]
;;;115    	I2C_WAIT;
000212  bf00              NOP      
                  |L1.532|
000214  4b10              LDR      r3,|L1.600|
000216  78db              LDRB     r3,[r3,#3]
000218  2402              MOVS     r4,#2
00021a  4223              TST      r3,r4
00021c  d0fa              BEQ      |L1.532|
00021e  4b0e              LDR      r3,|L1.600|
000220  78db              LDRB     r3,[r3,#3]
000222  4323              ORRS     r3,r3,r4
000224  4c0c              LDR      r4,|L1.600|
000226  70e3              STRB     r3,[r4,#3]
;;;116    		
;;;117    	I2C0->D = data;				/*send data	*/
000228  4623              MOV      r3,r4
00022a  711a              STRB     r2,[r3,#4]
;;;118    	I2C_WAIT;
00022c  bf00              NOP      
                  |L1.558|
00022e  4b0a              LDR      r3,|L1.600|
000230  78db              LDRB     r3,[r3,#3]
000232  2402              MOVS     r4,#2
000234  4223              TST      r3,r4
000236  d0fa              BEQ      |L1.558|
000238  4b07              LDR      r3,|L1.600|
00023a  78db              LDRB     r3,[r3,#3]
00023c  4323              ORRS     r3,r3,r4
00023e  4c06              LDR      r4,|L1.600|
000240  70e3              STRB     r3,[r4,#3]
;;;119    	I2C_M_STOP;
000242  4623              MOV      r3,r4
000244  789b              LDRB     r3,[r3,#2]
000246  2420              MOVS     r4,#0x20
000248  43a3              BICS     r3,r3,r4
00024a  4c03              LDR      r4,|L1.600|
00024c  70a3              STRB     r3,[r4,#2]
;;;120    	
;;;121    }
00024e  bd10              POP      {r4,pc}
;;;122    
                          ENDP

                  |L1.592|
                          DCD      0x40048000
                  |L1.596|
                          DCD      0x4004d040
                  |L1.600|
                          DCD      0x40066000

;*** Start embedded assembler ***

#line 1 "src\\i2c.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_i2c_c_i2c_init____REV16|
#line 115 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_i2c_c_i2c_init____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_i2c_c_i2c_init____REVSH|
#line 130
|__asm___5_i2c_c_i2c_init____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
