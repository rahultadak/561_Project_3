; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\adc.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\adc.d --cpu=Cortex-M0 --apcs=interwork -O0 -I.\inc -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Freescale\Kinetis -D__MICROLIB --omf_browse=.\obj\adc.crf src\ADC.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Init_ADC PROC
;;;2      
;;;3      void Init_ADC(void) {
000000  4838              LDR      r0,|L1.228|
;;;4      	
;;;5      	SIM->SCGC6 |= (1UL << SIM_SCGC6_ADC0_SHIFT); 
000002  6bc0              LDR      r0,[r0,#0x3c]
000004  2101              MOVS     r1,#1
000006  06c9              LSLS     r1,r1,#27
000008  4308              ORRS     r0,r0,r1
00000a  4936              LDR      r1,|L1.228|
00000c  63c8              STR      r0,[r1,#0x3c]
;;;6      	ADC0->CFG1 = 0x9C; // 16 bit
00000e  209c              MOVS     r0,#0x9c
000010  4935              LDR      r1,|L1.232|
000012  6088              STR      r0,[r1,#8]
;;;7      	ADC0->SC2 = 0;
000014  2000              MOVS     r0,#0
000016  6208              STR      r0,[r1,#0x20]
;;;8      	// Enable Bandgap buffer
;;;9      	PMC->REGSC |= PMC_REGSC_BGBE_MASK;
000018  4834              LDR      r0,|L1.236|
00001a  7880              LDRB     r0,[r0,#2]
00001c  2101              MOVS     r1,#1
00001e  4308              ORRS     r0,r0,r1
000020  4932              LDR      r1,|L1.236|
000022  7088              STRB     r0,[r1,#2]
;;;10     }
000024  4770              BX       lr
;;;11     
                          ENDP

                  Measure_VIn PROC
;;;12     float Measure_VIn(uint8_t channel) {
000026  b5fe              PUSH     {r1-r7,lr}
000028  4605              MOV      r5,r0
;;;13     	float vin; 
;;;14     	uint16_t vbg1, vbg2;
;;;15     	uint16_t res=0;
00002a  2000              MOVS     r0,#0
00002c  9002              STR      r0,[sp,#8]
;;;16     	
;;;17     	if (channel > MAX_ADC_CHANNEL_NUM)
00002e  2d1e              CMP      r5,#0x1e
000030  dd01              BLE      |L1.54|
;;;18     		return (-1.0);
000032  482f              LDR      r0,|L1.240|
                  |L1.52|
;;;19     		
;;;20     	// Read bandgap reference
;;;21     	ADC0->SC1[0] = BANDGAP_CHANNEL ; // start conversion on BG channel 
;;;22     	while (!(ADC0->SC1[0] & ADC_SC1_COCO_MASK))
;;;23     		;
;;;24     	vbg1 = ADC0->R[0];
;;;25     	
;;;26     	// Read supply rail 
;;;27     	ADC0->SC1[0] = 0x00; // start conversion on channel 0
;;;28     	while (!(ADC0->SC1[0] & ADC_SC1_COCO_MASK))
;;;29     		;
;;;30     	res = ADC0->R[0];
;;;31     	
;;;32     	// Read bandgap again
;;;33     	ADC0->SC1[0] = BANDGAP_CHANNEL ; // start conversion on BG channel
;;;34     	while (!(ADC0->SC1[0] & ADC_SC1_COCO_MASK))
;;;35     		;
;;;36     	vbg2 = ADC0->R[0];
;;;37     	
;;;38     	vbg1 = (vbg1+vbg2)/2;
;;;39     	vin = ((float) res)/vbg1;
;;;40     	return vin; 
;;;41     }
000034  bdfe              POP      {r1-r7,pc}
                  |L1.54|
000036  201b              MOVS     r0,#0x1b              ;21
000038  492b              LDR      r1,|L1.232|
00003a  6008              STR      r0,[r1,#0]            ;21
00003c  bf00              NOP                            ;22
                  |L1.62|
00003e  482a              LDR      r0,|L1.232|
000040  6800              LDR      r0,[r0,#0]            ;22
000042  2180              MOVS     r1,#0x80              ;22
000044  4208              TST      r0,r1                 ;22
000046  d0fa              BEQ      |L1.62|
000048  4827              LDR      r0,|L1.232|
00004a  6900              LDR      r0,[r0,#0x10]         ;24
00004c  b284              UXTH     r4,r0                 ;24
00004e  2000              MOVS     r0,#0                 ;27
000050  4925              LDR      r1,|L1.232|
000052  6008              STR      r0,[r1,#0]            ;27
000054  bf00              NOP                            ;28
                  |L1.86|
000056  4824              LDR      r0,|L1.232|
000058  6800              LDR      r0,[r0,#0]            ;28
00005a  2180              MOVS     r1,#0x80              ;28
00005c  4208              TST      r0,r1                 ;28
00005e  d0fa              BEQ      |L1.86|
000060  4821              LDR      r0,|L1.232|
000062  6900              LDR      r0,[r0,#0x10]         ;30
000064  b280              UXTH     r0,r0                 ;30
000066  9002              STR      r0,[sp,#8]            ;30
000068  201b              MOVS     r0,#0x1b              ;33
00006a  491f              LDR      r1,|L1.232|
00006c  6008              STR      r0,[r1,#0]            ;33
00006e  bf00              NOP                            ;34
                  |L1.112|
000070  481d              LDR      r0,|L1.232|
000072  6800              LDR      r0,[r0,#0]            ;34
000074  2180              MOVS     r1,#0x80              ;34
000076  4208              TST      r0,r1                 ;34
000078  d0fa              BEQ      |L1.112|
00007a  481b              LDR      r0,|L1.232|
00007c  6900              LDR      r0,[r0,#0x10]         ;36
00007e  b286              UXTH     r6,r0                 ;36
000080  19a0              ADDS     r0,r4,r6              ;38
000082  0fc1              LSRS     r1,r0,#31             ;38
000084  1809              ADDS     r1,r1,r0              ;38
000086  03c9              LSLS     r1,r1,#15             ;38
000088  0c0c              LSRS     r4,r1,#16             ;38
00008a  4620              MOV      r0,r4                 ;39
00008c  f7fffffe          BL       __aeabi_ui2f
000090  9001              STR      r0,[sp,#4]            ;39
000092  9802              LDR      r0,[sp,#8]            ;39
000094  f7fffffe          BL       __aeabi_ui2f
000098  9000              STR      r0,[sp,#0]            ;39
00009a  9901              LDR      r1,[sp,#4]            ;39
00009c  f7fffffe          BL       __aeabi_fdiv
0000a0  4607              MOV      r7,r0                 ;39
0000a2  4638              MOV      r0,r7                 ;40
0000a4  e7c6              B        |L1.52|
;;;42     
                          ENDP

                  Measure_VRef PROC
;;;43     float Measure_VRef(void) {
0000a6  b5fe              PUSH     {r1-r7,lr}
;;;44     	volatile float vref; 
;;;45     	uint16_t vbg;
;;;46     	
;;;47     	// Read bandgap reference
;;;48     	ADC0->SC1[0] = BANDGAP_CHANNEL ; // start conversion on BG channel 
0000a8  201b              MOVS     r0,#0x1b
0000aa  490f              LDR      r1,|L1.232|
0000ac  6008              STR      r0,[r1,#0]
;;;49     	while (!(ADC0->SC1[0] & ADC_SC1_COCO_MASK))
0000ae  bf00              NOP      
                  |L1.176|
0000b0  480d              LDR      r0,|L1.232|
0000b2  6800              LDR      r0,[r0,#0]
0000b4  2180              MOVS     r1,#0x80
0000b6  4208              TST      r0,r1
0000b8  d0fa              BEQ      |L1.176|
;;;50     		;
;;;51     	vbg = ADC0->R[0];
0000ba  480b              LDR      r0,|L1.232|
0000bc  6900              LDR      r0,[r0,#0x10]
0000be  b285              UXTH     r5,r0
;;;52     	
;;;53     	// compute reference voltage
;;;54     	vref = 65535.0/vbg;
0000c0  4628              MOV      r0,r5
0000c2  f7fffffe          BL       __aeabi_ui2d
0000c6  4606              MOV      r6,r0
0000c8  4632              MOV      r2,r6
0000ca  460b              MOV      r3,r1
0000cc  2000              MOVS     r0,#0
0000ce  4909              LDR      r1,|L1.244|
0000d0  f7fffffe          BL       __aeabi_ddiv
0000d4  9101              STR      r1,[sp,#4]
0000d6  9000              STR      r0,[sp,#0]
0000d8  f7fffffe          BL       __aeabi_d2f
0000dc  4604              MOV      r4,r0
;;;55     	return vref; 
0000de  4620              MOV      r0,r4
;;;56     }
0000e0  bdfe              POP      {r1-r7,pc}
                          ENDP

0000e2  0000              DCW      0x0000
                  |L1.228|
                          DCD      0x40048000
                  |L1.232|
                          DCD      0x4003b000
                  |L1.236|
                          DCD      0x4007d000
                  |L1.240|
                          DCD      0xbf800000
                  |L1.244|
                          DCD      0x40efffe0

;*** Start embedded assembler ***

#line 1 "src\\ADC.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_ADC_c_Init_ADC____REV16|
#line 115 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_ADC_c_Init_ADC____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_ADC_c_Init_ADC____REVSH|
#line 130
|__asm___5_ADC_c_Init_ADC____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
